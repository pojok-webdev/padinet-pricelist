{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,2UAA2U,eAAe,mCAAmC,YAAY,qL;;;;;;;;;;;ACAzY,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;ACAb;AAC0B;AAC3B;AACH;AAO9C;IAEE,mBAAoB,eAAgC,EAAS,IAAiB;QAA9E,iBAMC;QANmB,oBAAe,GAAf,eAAe,CAAiB;QAAS,SAAI,GAAJ,IAAI,CAAa;QAC5E,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAM;YACnB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,MAAM,CAAC;YACrC,KAAI,CAAC,KAAK,GAAG,MAAM;QACrB,CAAC,CAAC;IACJ,CAAC;IACD,2BAAO,GAAP,UAAQ,IAAI;QACV,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,IAAI,CAAC;IAC/B,CAAC;IACD,4BAAQ,GAAR;IACA,CAAC;IACD,sCAAkB,GAAlB,UAAmB,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,GAAG,EAAC,CAAC,CAAC;IACpB,CAAC;IACK,6BAAS,GAAf,UAAgB,GAAG;;;;;;4BACH,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,SAAS,EAAC,uFAAoB;4BAC9B,cAAc,EAAC;gCACb,KAAK,EAAC,GAAG,CAAC,KAAK;gCACf,QAAQ,EAAC,GAAG,CAAC,QAAQ;6BACtB;yBACF,CAAC;;wBANI,KAAK,GAAG,SAMZ;wBACF,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,CAAK,IAAG,YAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAA1B,CAA0B,CAAC;wBAGvD,qBAAM,KAAK,CAAC,OAAO,EAAE;;oBAF5B,2CAA2C;oBAC3C,0BAA0B;oBAC1B,sBAAO,SAAqB;;;;KAC7B;IACD,+BAAW,GAAX,UAAY,IAAI;QACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;IACtB,CAAC;IAhCU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yFAAgC;;SAEjC,CAAC;+EAGqC,8DAAe,EAAe,yDAAW;OAFnE,SAAS,CAiCrB;IAAD,gBAAC;CAAA;AAjCqB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <ion-menu-toggle auto-hide=\\\"false\\\" *ngFor=\\\"let user of users\\\">\\n      <ion-item>\\n        <ion-label (click)=\\\"doLogin(user.username)\\\">\\n          <h2>\\n            {{user.username}}\\n          </h2>\\n          <h3>{{user.email}}</h3>\\n        </ion-label>\\n        <ion-button (click)=\\\"setPassword(user)\\\">Set Password</ion-button>\\n      </ion-item>\\n    </ion-menu-toggle>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { SetpasswordComponent } from '../setpassword/setpassword.component';\nimport { ModalController } from '@ionic/angular';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\nusers\n  constructor(private modalcontroller: ModalController,private user: UserService) {\n    console.log(\"Whassap bro ?\")\n    this.user.gets(result => {\n      console.log(\"Result of users\",result)\n      this.users = result\n    })\n  }\n  doLogin(user){\n    console.log(\"Login as \",user)\n  }\n  ngOnInit() {\n  }\n  handleModalDismiss(d){\n    console.log(\"D\",d)\n  }\n  async showModal(obj){\n    const modal = await this.modalcontroller.create({\n      component:SetpasswordComponent,\n      componentProps:{\n        email:obj.email,\n        password:obj.password\n      }\n    })\n    modal.onDidDismiss().then((d:any)=>this.handleModalDismiss(d))\n    //const {data} = await modal.onDidDismiss()\n    //console.log(\"Data\",data)\n    return await modal.present()\n  }\n  setPassword(user){\n    this.showModal(user)\n  }\n}\n"],"sourceRoot":""}